JDK中预定义的注解：
    @Override：检查被标注的方法是否继承自父类（接口）
    @Deprecated：将该注解标注的内容已过时
    @SuppressWarnings：压制警告 参数：all

自定义注解：
    格式：
        元注解
        public @interface MyAnnotation {}
    本质：本质上是一个接口 ，继承自java.lang.annotation.Annotation接口
        public interface study.demo.demo26_annotation.MyAnnotation extends java.lang.annotation.Annotation {}
     属性：接口中可以定义的成员方法（抽象方法）
        属性的返回值类型：
            基本数据类型
            String
            枚举
            注解
            以上类型的数据
        定义了属性，需要在用的时候给属性赋值
            如果定义属性，适用default给属性默认值。可不赋值

         元注解：用于描述注解的注解
            @Target:描述注解能够作用的位置
                ElementType:
                    TYPE:可以作用于类
                    METHOD:可以作用于方法
                    FIELD:可以作用于成员变量上
            @Retention:描述注解被保留的阶段
                Retention(value = RetentionPolicy.RUNTIME):当前被描述的注解，会保留到class字节码文件中，并被jvm读取到
            @Documented:描述注解是否被抽取到api文档中
            @Inherited:描述注解是否被子类继承


在程序中使用（解析）注解：获取注解中定义的属性值

以后大多数时候会使用注解，而不是自定义注解
注解：编译器，解析程序
注解不是程序的一部分

